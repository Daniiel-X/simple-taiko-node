version: "3.4"
x-logging: &logging
  logging:
    options:
      max-size: 10m
      max-file: "3"

services:
  l2_execution_engine:
    image: gcr.io/evmchain/taiko-geth:grimsvotn
    restart: unless-stopped
    pull_policy: always
    stop_grace_period: 3m
    env_file:
      - .env
    volumes:
      - l2_execution_engine_data:/data/taiko-geth
      - ./script/l2:/script
    ports:
      - "${PORT_L2_EXECTION_ENGINE_METRICS}:6060"
      - "${PORT_L2_EXECTION_ENGINE_HTTP}:8545"
      - "${PORT_L2_EXECTION_ENGINE_WS}:8546"
      - "${PORT_L2_EXECTION_ENGINE_P2P}:30303"
      - "${PORT_L2_EXECTION_ENGINE_P2P}:30303/udp"
    entrypoint:
      - /bin/sh
      - -c
      - "/script/start-node.sh"
    <<: *logging

  l2_taiko_client_driver:
    image: gcr.io/evmchain/taiko-client:grimsvotn
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - l2_execution_engine
    env_file:
      - .env
    volumes:
      - l2_execution_engine_data:/data/taiko-geth
      - ./script/l2:/script
    entrypoint:
      - /bin/sh
      - -c
      - "/script/start-driver.sh"
    <<: *logging

  l2_taiko_client_prover_relayer:
    image: gcr.io/evmchain/taiko-client:grimsvotn
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - l2_execution_engine
      - l2_taiko_client_driver
      - l2_zkevm_chain_prover_rpcd
    env_file:
      - .env
    volumes:
      - ./script/l2:/script
    entrypoint:
      - /bin/sh
      - -c
      - "/script/start-prover-relayer.sh"
    <<: *logging

  l2_taiko_client_proposer:
    image: gcr.io/evmchain/taiko-client:grimsvotn
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - l2_execution_engine
      - l2_taiko_client_driver
    env_file:
      - .env
    volumes:
      - ./script/l2:/script
    entrypoint:
      - /bin/sh
      - -c
      - "/script/start-proposer.sh"
    <<: *logging

  l2_zkevm_chain_prover_rpcd:
    image: gcr.io/evmchain/grimsvotn-proverd:latest
    restart: unless-stopped
    pull_policy: always
    env_file:
      - .env
    volumes:
      - ./script/l2:/script
      - l2_zkevm_chain_prover_rpcd_data:/data
    entrypoint:
      - /bin/sh
      - -c
      - "/script/start-zkevm-chain-rpcd.sh"
    deploy:
      replicas: ${ZKEVM_CHAIN_INSTANCES_NUM:-1}
      resources:
        limits:
          memory: 16G
    <<: *logging

  l3_execution_engine:
    image: gcr.io/evmchain/taiko-geth:eldfell
    restart: unless-stopped
    pull_policy: always
    stop_grace_period: 3m
    env_file:
      - .env
    volumes:
      - l3_execution_engine_data:/data/taiko-geth
      - ./script/l3:/script
    ports:
      - "${PORT_L3_EXECTION_ENGINE_METRICS}:6060"
      - "${PORT_L3_EXECTION_ENGINE_HTTP}:8545"
      - "${PORT_L3_EXECTION_ENGINE_WS}:8546"
      - "${PORT_L3_EXECTION_ENGINE_P2P}:30303"
      - "${PORT_L3_EXECTION_ENGINE_P2P}:30303/udp"
    entrypoint:
      - /bin/sh
      - -c
      - "/script/start-node.sh"
    <<: *logging

  l3_taiko_client_driver:
    image: gcr.io/evmchain/taiko-client:eldfell
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - l2_execution_engine
    env_file:
      - .env
    volumes:
      - l3_execution_engine_data:/data/taiko-geth
      - ./script/l3:/script
    entrypoint:
      - /bin/sh
      - -c
      - "/script/start-driver.sh"
    <<: *logging

  l3_taiko_client_prover_relayer:
    image: gcr.io/evmchain/taiko-client:eldfell
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - l3_execution_engine
      - l3_taiko_client_driver
      - l3_zkevm_chain_prover_rpcd
    env_file:
      - .env
    volumes:
      - ./script/l3:/script
    entrypoint:
      - /bin/sh
      - -c
      - "/script/start-prover-relayer.sh"
    <<: *logging

  l3_taiko_client_proposer:
    image: gcr.io/evmchain/taiko-client:eldfell
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - l3_execution_engine
      - l3_taiko_client_driver
    env_file:
      - .env
    volumes:
      - ./script/l3:/script
    entrypoint:
      - /bin/sh
      - -c
      - "/script/start-proposer.sh"
    <<: *logging

  l3_zkevm_chain_prover_rpcd:
    image: gcr.io/evmchain/eldfell-proverd:latest
    restart: unless-stopped
    pull_policy: always
    env_file:
      - .env
    volumes:
      - ./script/l3:/script
      - l3_zkevm_chain_prover_rpcd_data:/data
    entrypoint:
      - /bin/sh
      - -c
      - "/script/start-zkevm-chain-rpcd.sh"
    deploy:
      replicas: ${ZKEVM_CHAIN_INSTANCES_NUM:-1}
      resources:
        limits:
          memory: 16G
    <<: *logging

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - ${PORT_PROMETHEUS}:9090
    depends_on:
      - l2_execution_engine
      - l2_taiko_client_driver
      - l3_execution_engine
      - l3_taiko_client_driver
    volumes:
      - ./docker/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - --log.level=debug
      - --config.file=/etc/prometheus/prometheus.yml
    <<: *logging

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - ${PORT_GRAFANA}:3000
    depends_on:
      - l2_execution_engine
      - l2_taiko_client_driver
      - prometheus
    environment:
      - GF_PATHS_CONFIG=/etc/grafana/custom/settings.ini
      - GF_PATHS_PROVISIONING=/etc/grafana/custom/provisioning
      - GF_LOG_LEVEL=WARN
    volumes:
      - ./docker/grafana/custom/settings.ini:/etc/grafana/custom/settings.ini
      - ./docker/grafana/custom/provisioning:/etc/grafana/custom/provisioning
      - grafana_data:/var/lib/grafana
    <<: *logging

volumes:
  l2_execution_engine_data:
  l3_execution_engine_data:
  l2_zkevm_chain_prover_rpcd_data:
  l3_zkevm_chain_prover_rpcd_data:
  prometheus_data:
  grafana_data:
